# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Scum Bot Continious Deployment

on:
  push:
    branches: main

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    
    - name: Checkout 
      uses: actions/checkout@v2
      
    - name: Set up JDK 11
      uses: actions/setup-java@v2
      with:
        java-version: '11'
        distribution: 'temurin'
        cache: maven
        
    - name: Build artifact
      run: |
           mvn package
    
    - name: Copy file via ssh key
#       uses: appleboy/scp-action@master
#       with:
#        host: 18.198.86.82
#        username: root
#        key: ${{ secrets.SCUM_KEY }}
#        port: 22
#        source: "/home/runner/work/scumerBot/scumerBot/target/*.jar"
#        target: "~/"
        
      run: |
       mkdir -p ~/.ssh/
       echo "${{ secrets.SCUM_KEY }}" > ~/.ssh/scumkey.pem \
       chmod 400 scumkey.pem
       scp -i ~/.ssh/scumkey.pem -o UserKnownHostsFile=/github/home/.ssh/known_hosts -tt /home/runner/work/scumerBot/scumerBot/target/*.jar root@${{ secrets.EC2_IP }}:/opt/prod/scumbot.jar
       
    - name: Configure environment with new artifact
      uses: appleboy/ssh-action@master
      with:
          host: ${{ secrets.EC2_IP }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.SCUM_KEY }}
          port: 22
          script: |
            sudo chown -R jvmapps:appmgr /opt/prod
            sudo systemctl daemon-reload
            sudo systemctl restart scumBot.service
            sleep 10
            sudo systemctl status scumBot.service -l
#     - name: Prepare
#       run: |
#         mvn --batch-mode \
#         --no-transfer-progress \
#         -DdevelopmentVersion=0.0.$(($GITHUB_RUN_NUMBER + 1)) \
#         -DreleaseVersion=0.0.$GITHUB_RUN_NUMBER \
#         -Dresume=false \
#         -DdryRun=true \
#         clean release:clean release:prepare
      
#     - name: Release & perform
#       run: |
#         echo "${{ secrets.PRIVATE_KEY }}"
#         echo "${{ secrets.PRIVATE_KEY }}" | tr -d '\r' > private_key.pem
#         chmod 400 private_key.pem
        
#         git config --global user.email "milanmelnykov@gmail.com"
#         git config --global user.name "Scum Developer"
#         eval `ssh-agent -s`
#         ssh-add private_key.pem
#         mvn --batch-mode \
#           --no-transfer-progress \
#           -DdevelopmentVersion=0.0.$(($GITHUB_RUN_NUMBER + 1))-SNAPSHOT \
#           -DreleaseVersion=0.0.$GITHUB_RUN_NUMBER \
#           -Dresume=false \
#           release:clean release:prepare release:perform
